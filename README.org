* OrgTp

  OrgTp shows text table like emacs org-table for easy reading.

** Installation

Install as a standalone gem

#+BEGIN_SRC shell-script
$ gem install org_tp
#+END_SRC

Or install within application using Gemfile

#+BEGIN_SRC shell-script
$ bundle add org_tp
$ bundle install
#+END_SRC

** Examples

*** Array of hash

#+BEGIN_SRC ruby
tp [{id: 1, name: 'alice'}, {id: 2, name: 'bob'}]
# >> |----+-------|
# >> | id | name  |
# >> |----+-------|
# >> |  1 | alice |
# >> |  2 | bob   |
# >> |----+-------|
#+END_SRC

*** Hash

#+BEGIN_SRC ruby
tp({id: 1, name: 'alice'})
# >> |------+-------|
# >> | id   |     1 |
# >> | name | alice |
# >> |------+-------|
#+END_SRC

*** Array

#+BEGIN_SRC ruby
tp [:alice, :bob]
# >> |-------|
# >> | alice |
# >> | bob   |
# >> |-------|
#+END_SRC

*** Integer, String, Symbol

#+BEGIN_SRC ruby
tp 1
# >> |---|
# >> | 1 |
# >> |---|
#+END_SRC

#+BEGIN_SRC ruby
tp 'foo'
# >> |-----|
# >> | foo |
# >> |-----|
#+END_SRC

#+BEGIN_SRC ruby
tp :foo
# >> |-----|
# >> | foo |
# >> |-----|
#+END_SRC

*** ActiveRecord or Mongoid

#+BEGIN_SRC ruby
['alice', 'bob'].each { |e| User.create!(name: e) }
#+END_SRC

#+BEGIN_SRC ruby
tp User
# >> |----+-------|
# >> | id | name  |
# >> |----+-------|
# >> |  1 | alice |
# >> |  2 | bob   |
# >> |----+-------|
#+END_SRC

#+BEGIN_SRC ruby
tp User.limit(1)
# >> |----+-------|
# >> | id | name  |
# >> |----+-------|
# >> |  1 | alice |
# >> |----+-------|
#+END_SRC

#+BEGIN_SRC ruby
tp User.first
# >> |------+-------|
# >> | id   |     1 |
# >> | name | alice |
# >> |------+-------|
#+END_SRC

**** ActiveRecord::Result

#+BEGIN_SRC ruby
tp ActiveRecord::Base.connection.select_all('SELECT * FROM users')
# >> |----+-------|
# >> | id | name  |
# >> |----+-------|
# >> |  1 | alice |
# >> |  2 | bob   |
# >> |----+-------|
#+END_SRC

** How to table as string

Use to_t method.

#+BEGIN_SRC ruby
puts [{id: 1, name: 'alice'}, {id: 2, name: 'bob'}].to_t
# >> |----+-------|
# >> | id | name  |
# >> |----+-------|
# >> |  1 | alice |
# >> |  2 | bob   |
# >> |----+-------|
#+END_SRC

** Options

Pass as the second argument to tp or the first argument to to_t.

#+BEGIN_SRC ruby
tp 1
# >> |---|
# >> | 1 |
# >> |---|

tp 1, intersection_both: '+'
# >> +---+
# >> | 1 |
# >> +---+
#+END_SRC

*** Markdown format example

#+BEGIN_SRC ruby
tp [{id: 1, name: 'alice'}, {id: 2, name: 'bob'}], intersection: '|', cover: false
# >> | id | name  |
# >> |----|-------|
# >> |  1 | alice |
# >> |  2 | bob   |
#+END_SRC

** Global Options

#+BEGIN_SRC ruby
tp OrgTp.default_options
# >> |-------------------+-------|
# >> | header            |       |
# >> | vertical          | |     |
# >> | intersection      | +     |
# >> | intersection_both | |     |
# >> | horizon           | -     |
# >> | padding           |       |
# >> | in_code           | UTF-8 |
# >> |-------------------+-------|

tp 1
# >> |---|
# >> | 1 |
# >> |---|

OrgTp.default_options[:intersection_both] = '+'

tp 1
# >> +---+
# >> | 1 |
# >> +---+
#+END_SRC

** When used in conjunction with tapp gem

#+BEGIN_SRC ruby
require 'tapp'
require 'org_tp'

"Hello".reverse.tapp.reverse.tapp
# >> |-------|
# >> | olleH |
# >> |-------|
# >> |-------|
# >> | Hello |
# >> |-------|
#+END_SRC
