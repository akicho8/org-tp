* OrgTp

  OrgTp shows ascii table like emacs org-table for easy reading.

** Hash of Array

#+BEGIN_SRC ruby
tp [{id: 1, name: "alice"}, {id: 2, name: "bob"}]
# >> |----+-------|
# >> | id | name  |
# >> |----+-------|
# >> |  1 | alice |
# >> |  2 | bob   |
# >> |----+-------|
#+END_SRC

** Hash

#+BEGIN_SRC ruby
tp({id: 1, name: "alice"})
# >> |------+-------|
# >> | id   |     1 |
# >> | name | alice |
# >> |------+-------|
#+END_SRC

** Integer, String, Symbol

#+BEGIN_SRC ruby
tp 1
# >> |---|
# >> | 1 |
# >> |---|
#+END_SRC

#+BEGIN_SRC ruby
tp "foo"
# >> |-----|
# >> | foo |
# >> |-----|
#+END_SRC

#+BEGIN_SRC ruby
tp :foo
# >> |-----|
# >> | foo |
# >> |-----|
#+END_SRC

** ActiveRecord

#+BEGIN_SRC ruby
["alice", "bob"].each {|e| User.create!(name: e) }
#+END_SRC

#+BEGIN_SRC ruby
tp User
# >> |----+-------|
# >> | id | name  |
# >> |----+-------|
# >> |  1 | alice |
# >> |  2 | bob   |
# >> |----+-------|
#+END_SRC

#+BEGIN_SRC ruby
tp User.limit(1)
# >> |----+-------|
# >> | id | name  |
# >> |----+-------|
# >> |  1 | alice |
# >> |----+-------|
#+END_SRC

#+BEGIN_SRC ruby
tp User.first
# >> |------+-------|
# >> | id   |     1 |
# >> | name | alice |
# >> |------+-------|
#+END_SRC

** How to table as string

#+BEGIN_SRC ruby
puts [{id: 1, name: "alice"}, {id: 2, name: "bob"}].to_t
# >> |----+-------|
# >> | id | name  |
# >> |----+-------|
# >> |  1 | alice |
# >> |  2 | bob   |
# >> |----+-------|
#+END_SRC
