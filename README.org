#+OPTIONS: toc:nil num:nil author:nil creator:nil \n:nil |:t
#+OPTIONS: @:t ::t ^:t -:t f:t *:t <:t

* オブジェクトを表にするライブラリ

  : tt({:id => 1, :name => "alice"})
  : # >> +----+-------+
  : # >> | id | name  |
  : # >> +----+-------+
  : # >> |  1 | alice |
  : # >> +----+-------+

  : tt [{:id => 1, :name => "alice"}, {:id => 2, :name => "bob"}]
  : # >> +----+-------+
  : # >> | id | name  |
  : # >> +----+-------+
  : # >> |  1 | alice |
  : # >> |  2 | bob   |
  : # >> +----+-------+

** あんまり意味ないけど

  : tt 1
  : # >> +--------+
  : # >> | Fixnum |
  : # >> +--------+
  : # >> |      1 |
  : # >> +--------+

  : tt "foo"
  : # >> +--------+
  : # >> | String |
  : # >> +--------+
  : # >> | foo    |
  : # >> +--------+

  : tt :foo
  : # >> +--------+
  : # >> | Symbol |
  : # >> +--------+
  : # >> | foo    |
  : # >> +--------+

** ActiveRecord の場合ちょっと見やすくする

  : ["alice", "bob"].each{|name| User.create!(:name => name) }

  : tt User
  : # >> +----+-------+
  : # >> | id | name  |
  : # >> +----+-------+
  : # >> |  1 | alice |
  : # >> |  2 | bob   |
  : # >> +----+-------+

  : tt User.limit(1)
  : # >> +----+-------+
  : # >> | id | name  |
  : # >> +----+-------+
  : # >> |  1 | alice |
  : # >> +----+-------+

  : tt User.first
  : # >> +----+-------+
  : # >> | id | name  |
  : # >> +----+-------+
  : # >> |  1 | alice |
  : # >> +----+-------+

** 文字列にする場合

   : puts [{:id => 1, :name => "alice"}, {:id => 2, :name => "bob"}].to_t
   : # >> +----+-------+
   : # >> | id | name  |
   : # >> +----+-------+
   : # >> |  1 | alice |
   : # >> |  2 | bob   |
   : # >> +----+-------+

** TableFomatter とインタフェース互換

   : header = ["ID", "名前"]
   : rows = [[1, "alice"], [2, "bob"]]
   : puts RainTable::TableFormatter.format(header, rows)
   : +----+-------+
   : | ID | 名前  |
   : +----+-------+
   : |  1 | alice |
   : |  2 | bob   |
   : +----+-------+
